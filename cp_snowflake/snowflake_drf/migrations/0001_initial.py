# Generated by Django 4.1.2 on 2022-12-02 17:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AnnualTargetFormMetric",
            fields=[
                (
                    "annual_target_form_metrics_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("metric_name", models.CharField(max_length=100)),
                ("uom_last_fiscal_year_metric", models.CharField(max_length=50)),
                ("uom_last_fiscal_year_imperial", models.CharField(max_length=50)),
                ("uom_budget_metric", models.CharField(max_length=50)),
                ("uom_budget_imperial", models.CharField(max_length=50)),
                ("uom_personal_best_metric", models.CharField(max_length=50)),
                ("uom_personal_best_imperial", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "annual_target_form_metric",
            },
        ),
        migrations.CreateModel(
            name="ConfigurationFormLeadingIndicator",
            fields=[
                (
                    "configuration_form_leading_indicator_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("leading_indicator_name", models.CharField(max_length=100)),
                ("uom_metric", models.CharField(max_length=50)),
                ("uom_imperial", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "configuration_form_leading_indicator",
            },
        ),
        migrations.CreateModel(
            name="ConfigurationFormMTPM",
            fields=[
                (
                    "configuration_form_mtpm_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("mtpm_name", models.CharField(max_length=100)),
                ("uom_metric", models.CharField(max_length=50)),
                ("uom_imperial", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "configuration_form_mtpm",
            },
        ),
        migrations.CreateModel(
            name="MonthlyFinancialFormMetric",
            fields=[
                (
                    "monthly_financial_form_metric_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("metric_name", models.CharField(max_length=100)),
                ("uom_metric", models.CharField(max_length=50)),
                ("uom_imperial", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "monthly_financial_form_metric",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "plant_id",
                    models.CharField(max_length=36, primary_key=True, serialize=False),
                ),
                ("plant_name", models.CharField(max_length=100)),
                ("plant_path", models.CharField(default="", max_length=1024)),
                ("reporting_day_start", models.IntegerField(default=0)),
                ("timezone", models.CharField(default="", max_length=100)),
                ("utc_offset", models.FloatField(default=0.0)),
            ],
            options={
                "db_table": "plant",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("region_id", models.AutoField(primary_key=True, serialize=False)),
                ("region_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "region",
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                ("technology_id", models.AutoField(primary_key=True, serialize=False)),
                ("technology_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "technology",
            },
        ),
        migrations.CreateModel(
            name="UserGroups",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlantTechnology",
            fields=[
                (
                    "plant_technology_id",
                    models.CharField(max_length=36, primary_key=True, serialize=False),
                ),
                (
                    "plant_technology_path",
                    models.CharField(default="", max_length=1024),
                ),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.plant",
                    ),
                ),
                (
                    "technology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.technology",
                    ),
                ),
            ],
            options={
                "db_table": "plant_technology",
            },
        ),
        migrations.CreateModel(
            name="PlantHistoricalData",
            fields=[
                (
                    "plant_historical_data_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("timestamp", models.DateTimeField()),
                ("isDST", models.SmallIntegerField()),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.plant",
                    ),
                ),
            ],
            options={
                "db_table": "plant_historical_data",
            },
        ),
        migrations.AddField(
            model_name="plant",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="snowflake_drf.region"
            ),
        ),
        migrations.CreateModel(
            name="MonthlyFinancialFormMetricValue",
            fields=[
                (
                    "monthly_financial_form_metric_value_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "plant_technology_path",
                    models.CharField(default="", max_length=1024),
                ),
                ("value_timestamp_utc", models.DateTimeField()),
                ("value_timestamp_local", models.DateTimeField()),
                ("metric_value", models.FloatField()),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("datetime_updated", models.DateTimeField(auto_now=True)),
                ("user_created", models.CharField(max_length=100)),
                ("user_updated", models.CharField(max_length=100)),
                (
                    "monthly_financial_form_metric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.monthlyfinancialformmetric",
                    ),
                ),
                (
                    "plant_technology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.planttechnology",
                    ),
                ),
            ],
            options={
                "db_table": "monthly_financial_form_metric_value",
            },
        ),
        migrations.AddField(
            model_name="monthlyfinancialformmetric",
            name="technology",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="snowflake_drf.technology",
            ),
        ),
        migrations.CreateModel(
            name="ConfigurationFormMTPMValue",
            fields=[
                (
                    "configuration_form_mtpm_value_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("min", models.FloatField(blank=True, null=True)),
                ("max", models.FloatField(blank=True, null=True)),
                ("display_low", models.FloatField(blank=True, null=True)),
                ("display_high", models.FloatField(blank=True, null=True)),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("datetime_updated", models.DateTimeField(auto_now=True)),
                ("user_created", models.CharField(max_length=100)),
                ("user_updated", models.CharField(max_length=100)),
                (
                    "configuration_form_mtpm",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.configurationformmtpm",
                    ),
                ),
                (
                    "plant_technology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.planttechnology",
                    ),
                ),
            ],
            options={
                "db_table": "configuration_form_mtpm_value",
            },
        ),
        migrations.AddField(
            model_name="configurationformmtpm",
            name="technology",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="snowflake_drf.technology",
            ),
        ),
        migrations.CreateModel(
            name="ConfigurationFormLeadingIndicatorValue",
            fields=[
                (
                    "configuration_form_leading_indicator_value_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("min", models.FloatField(blank=True, null=True)),
                ("max", models.FloatField(blank=True, null=True)),
                ("display_low", models.FloatField(blank=True, null=True)),
                ("display_high", models.FloatField(blank=True, null=True)),
                ("corrective_action", models.TextField(blank=True, null=True)),
                ("cmo_link", models.TextField(blank=True, null=True)),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("datetime_updated", models.DateTimeField(auto_now=True)),
                ("user_created", models.CharField(max_length=100)),
                ("user_updated", models.CharField(max_length=100)),
                (
                    "configuration_form_leading_indicator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.configurationformleadingindicator",
                    ),
                ),
                (
                    "plant_technology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.planttechnology",
                    ),
                ),
            ],
            options={
                "db_table": "configuration_form_leading_indicator_value",
            },
        ),
        migrations.AddField(
            model_name="configurationformleadingindicator",
            name="configuration_form_mtpm",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="snowflake_drf.configurationformmtpm",
            ),
        ),
        migrations.CreateModel(
            name="AnnualTargetFormMetricValue",
            fields=[
                (
                    "annual_target_form_metric_values_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("value_timestamp_utc", models.DateTimeField()),
                ("value_timestamp_local", models.DateTimeField()),
                ("last_fiscal_year", models.FloatField()),
                ("budget", models.FloatField()),
                ("personal_best", models.FloatField()),
                ("datetime_created", models.DateTimeField(auto_now_add=True)),
                ("datetime_updated", models.DateTimeField(auto_now=True)),
                ("user_created", models.CharField(max_length=100)),
                ("user_updated", models.CharField(max_length=100)),
                (
                    "annual_target_form_metrics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.annualtargetformmetric",
                    ),
                ),
                (
                    "plant_technology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="snowflake_drf.planttechnology",
                    ),
                ),
            ],
            options={
                "db_table": "annual_target_form_metric_value",
            },
        ),
        migrations.AddField(
            model_name="annualtargetformmetric",
            name="technology",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="snowflake_drf.technology",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                through="snowflake_drf.UserGroups",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
